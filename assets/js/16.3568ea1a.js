(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{404:function(t,e,r){"use strict";r.r(e);var s=r(10),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"axios-请求拦截器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#axios-请求拦截器"}},[t._v("#")]),t._v(" axios 请求拦截器")]),t._v(" "),r("h2",{attrs:{id:"_1、请求拦截器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、请求拦截器"}},[t._v("#")]),t._v(" 1、请求拦截器")]),t._v(" "),r("p",[t._v("请求拦截器的作用是在请求发送前进行一些操作，例如在每个请求体里加上 token，统一做了处理如果以后要改也非常容易。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("axios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么，例如加入token\n    .......\n    return config;\n  }, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  });\n")])])]),r("h1",{attrs:{id:"_2、响应拦截器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、响应拦截器"}},[t._v("#")]),t._v(" 2、响应拦截器")]),t._v(" "),r("p",[t._v("响应拦截器的作用是在接收到响应后进行一些操作，例如在服务器返回登录状态失效，需要重新登录的时候，跳转到登录页。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("axios.interceptors.response.use(function (response) {\n    // 在接收响应做些什么，例如跳转到登录页\n    ......\n    return response;\n  }, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n  });\n")])])]),r("h1",{attrs:{id:"_3、移除拦截器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、移除拦截器"}},[t._v("#")]),t._v(" 3、移除拦截器")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("var myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);