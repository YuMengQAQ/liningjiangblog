(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{403:function(e,n,t){"use strict";t.r(n);var a=t(10),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"热点移动端总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#热点移动端总结"}},[e._v("#")]),e._v(" 热点移动端总结")]),e._v(" "),t("h2",{attrs:{id:"_2021-5-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2021-5-14"}},[e._v("#")]),e._v(" 2021.5.14")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("今天完成了频道编辑模块和文章搜索模块中的搜索历史和搜索结果、联想搜索。")])]),e._v(" "),t("li",[t("p",[e._v("至今为止遇到的技术难点（知识掌握不牢固）：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("vuex 刷新过后如何保持状态不丢失？")])]),e._v(" "),t("li",[t("p",[e._v("如何做数据防抖处理（时间转换及深拷贝等数组去重的第三方方法运用）")])]),e._v(" "),t("li",[t("p",[e._v("van-tabs 每个选项卡所展示的数据不同，怎么实现的思路？")])]),e._v(" "),t("li",[t("p",[e._v("如何使 van-ceil 展示的指定数据高亮显示")]),e._v(" "),t("ul",[t("li")])])]),e._v(" "),t("ul",[t("li",[e._v("添加数据到数组中并且数组去重并保证加入的数据在数组的最前面业务逻辑（简单实现）?怎么运用 new Set 进行去重？")]),e._v(" "),t("li",[e._v("如何做好移动端的适配？")]),e._v(" "),t("li",[e._v("频道编辑模块中，获取我的频道和频道推荐数据，之后再对我的频道进行添加或者删除，在对频道推荐进行列表渲染时普通直接对数组进行渲染，后期需要单独对数组设置添加或者删除，有更好的解决方式？")])])]),e._v(" "),t("li",[t("p",[e._v("目前解决方案")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("过 vuex 管理状态和本地存储技术 localstorage 来解决，当 vuex 状态初始化的时候就从本地存储中获取数据")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import Vue from "vue";\nimport Vuex from "vuex";\nimport { setItem, getItem } from "@/utils/storage";\nVue.use(Vuex);\nconst USER = "redian-user";\nexport default new Vuex.Store({\nstate: {\n  user: getItem(USER),\n  // user: JSON.parse(window.localStorage.getItem("user"))\n },\n mutations: {\n  setUser(state, data) {\n   state.user = data;\n   // window.localStorage.setItem("user",JSON.stringify(state.user))\n   setItem(USER, state.user);\n  },\n },\n actions: {},\n modules: {},\n});\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("本地存储模块")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  // 获取状态值\nexport const getItem = name => {\n\tconst data = window.localStorage.getItem(name)\n\t//data可能不是JSON字符串\n     try {\n      \treturn JSON.parse(data)\n     }catch (error) {\n      \treturn data\n     }\n}\n  // 改变状态值\n export const setItem = (name,value) => {\n     if(typeof(value)==='object') {\n      \tvalue = JSON.stringify(value)\n     }\n     window.localStorage.setItem(name,value)\n    }\n //删除状态值\n export const removeItem = name => {\n    window.localStorage.removeItem(name)\n }\n")])])])])])]),e._v(" "),t("li",[t("p",[e._v("通过 lodash 里的 debounce 进行数据防抖及 dayjs 进行日期处理")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("watch: {\n\n      searchText: {\n\n       handler: debounce(async function() {\n\n    ​    const { data: res } = await getSearchSuggestion(this.searchText);\n\n    ​    this.suggestion = res.data.options;\n\n       }, 200),\n\n       immediate: true,\n\n      },\n\n     },\n")])])])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\n  var dayjs = require("dayjs");\n\n  import Vue from "vue";\n\n  //import dayjs from \'dayjs\' // ES 2015\n\n  // 加载中文语言包\n\n  import "dayjs/locale/zh-cn";\n\n\n\n  import relativeTime from "dayjs/plugin/relativeTime";\n\n\n// 配置使用处理相对时间的插件\n\ndayjs.extend(relativeTime);\n\n\n// 配置使用中文语言包\n\ndayjs.locale("zh-cn");\n\n\n// 全局过滤器：处理相对时间\n\nVue.filter("relativeTime", (value) => {\n\n return dayjs().from(dayjs(value));\n\n});\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("通过封装组件的方式，把数据通过 props 来传给子组件进行传递，通过正则匹配和 v-html 指令来实现。")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('highlight(item) {\n\n   //RegExp 是正则表达式的构造函数\n\n   //参数1：字符串\n\n   //参数2: 匹配模式\n\n   //返回值：正则对象\n\n   return item.replace(\n\n​    new RegExp(this.searchText, "gi"),\n\n​    `<span style="color:red">${this.searchText}</span>`\n\n   );\n\n },\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("通过数组的 indexof 方法来实现")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//数组去重\n\n   const index = this.searchHistory.indexOf(searchText);\n\n   if (index !== -1) {\n\n​    this.searchHistory.splice(index, 1);\n\n   }\n\n   this.searchHistory.unshift(searchText);\n\nnew set去重方式(两个数组合并)\n\n//加载本地和线上历史记录\n\n  async loadSearchHistory() {\n\n   let localSearchHistory = getItem("search-history") || [];\n\n   if (this.user) {\n\n​    const { data: res } = await getSearchHistory();\n\n​    //数组去重\n\n​    localSearchHistory = [\n\n​     ...new Set([...localSearchHistory, ...res.data.keywords]),\n\n​    ];\n\n   }\n\n   this.searchHistory = localSearchHistory;\n\n  },\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("目前移动端适配是通过 postcss 来进行适配，具体配置在 postcss.config.js。")]),e._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Autoprefixer"),t("OutboundLink")],1),e._v(" 插件可以实现自动添加浏览器相关的声明前缀")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/csstools/postcss-preset-env",target:"_blank",rel:"noopener noreferrer"}},[e._v("PostCSS Preset Env"),t("OutboundLink")],1),e._v(" 插件可以让你使用更新的 CSS 语法特性并实现向下兼容")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/cuth/postcss-pxtorem",target:"_blank",rel:"noopener noreferrer"}},[e._v("postcss-pxtorem"),t("OutboundLink")],1),e._v(" 可以实现将 px 转换为 rem")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://cli.vuejs.org/zh/guide/css.html#postcss",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue CLI 默认集成了 PostCSS"),t("OutboundLink")],1),e._v("，并且默认开启了 "),t("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[e._v("autoprefixer"),t("OutboundLink")],1),e._v(" 插件。")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://github.com/cuth/postcss-pxtorem",target:"_blank",rel:"noopener noreferrer"}},[e._v("postcss-pxtorem"),t("OutboundLink")],1),e._v("的配置文件")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// postcss.config.js\n\nmodule.exports = {\n\n plugins: {\n\n  //兼容的版本\n\n  // autoprefixer: {\n\n  //  browsers: ["Android >= 4.0", "iOS >= 8"],\n\n  // },\n\n  "postcss-pxtorem": {\n\n   rootValue: 37.5,\n\n   propList: ["*"],\n\n  },\n\n },\n\n};\n')])])])])])])])]),e._v(" "),t("li",[t("p",[e._v("通过 computed 属性,运用数组的 filter 和 find 方法来处理数组，然而 computed 属性会自动随着属性值改变而改变")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('computed: {\n\n  ...mapState(["user"]),\n\n  recommendChannel() {\n\n   return this.allChannels.filter((allchannel) => {\n\n​    return !this.channels.find((channel) => {\n\n​     return allchannel.id === channel.id;\n\n​    });\n\n   });\n\n  },\n\n },\n')])])])])])])])])]),e._v(" "),t("h2",{attrs:{id:"_2021-5-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2021-5-18"}},[e._v("#")]),e._v(" 2021.5.18")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("今天做了文章详情和发布评论以及评论列表模块，目前遇到的技术难点有：")]),e._v(" "),t("ul",[t("li",[e._v("去文章详情页面的传递的路由参数整数过大，导致传递过去的路由参数拿不完整")]),e._v(" "),t("li",[e._v("每次数据发生变化都需要本地存储，一个一个存储代码糅合。")])])]),e._v(" "),t("li",[t("p",[e._v("目前解决方案")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("运用 JSONBIG 解决参数过大的问题，让大整数转换成对象，需要使用的时候转换一下即可。在 axios 请求模块中加入以下代码。")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("npm i json-bigint")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import jsonbig from "json-bigint"\n\n//封装请求模块\n\nconst request = axios.create({\n\n baseURL: "http://ttapi.research.itcast.cn/", // 基础路径\n\n // transformResponse 允许自定义原始的响应数据（字符串）\n\n transformResponse: [\n\n  function(data) {\n\n   try {\n\n​    // 如果转换成功则返回转换的数据结果\n\n​    return jsonBig.parse(data);\n\n   } catch (err) {\n\n​    // 如果转换失败，则包装为统一数据格式并返回\n\n​    return {\n\n​     data,\n\n​    };\n\n   }\n\n  },\n\n ],\n\n});\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("通过 watch 函数来监视数据的变化然后对数据进行统一存储。")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('watch: {\n\n  //通过监视对历史记录数据进行统一处理\n\n  searchHistory() {\n\n   setItem("search-history",this.searchHistory)\n\n  }\n\n},\n')])])])])])])])])]),e._v(" "),t("h2",{attrs:{id:"_2021-5-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2021-5-21"}},[e._v("#")]),e._v(" 2021.5.21")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("最后几天项目终于完工了，最终完成了编辑资料以及小智同学、功能优化。")])]),e._v(" "),t("li",[t("p",[e._v("遇到的困难：")]),e._v(" "),t("ul",[t("li",[e._v("编辑资料基本都是 vantUI 组件的应用，但是其中照片更新以及图片裁切怎么做？")]),e._v(" "),t("li",[e._v("小智同学是通过 websoket 协议进行通信的，怎么拿到返回的数据和把自己的数据进行渲染？")]),e._v(" "),t("li",[e._v("token 过期如何解决？")]),e._v(" "),t("li",[e._v("组件缓存带来影响怎么解决？比如文章详情返回上一步就会回到文章顶部。")]),e._v(" "),t("li",[e._v("处理页面的访问权限？")]),e._v(" "),t("li",[e._v("如何对移动端网站进行应用加壳？")])])]),e._v(" "),t("li",[t("p",[e._v("目前解决方案")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("照片更新是通过 file 类型的 Input 框进行文件上传，通过@onchange 事件")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<input type="file" hidden ref="file" accept="image/*" @change="onChange" />\n')])])])]),e._v(" "),t("li",[t("p",[e._v("然后拿到input框的dom对象，通过this.$refs.file.files[0]拿到这个文件类型的图片,把图片传给图片的弹出层,通过cropperjs进行图片裁切")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import "cropperjs/dist/cropper.css";\nimport Cropper from "cropperjs";\n')])])])]),e._v(" "),t("li",[t("p",[e._v("在mounted函数中")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    const image = this.$refs.image;\n    let cropper = new Cropper(image, {\n      viewMode: 1,\n      dragMode: "move",\n      aspectRatio: 1,\n      autoCropArea: 1,\n      cropBoxMovable: false,\n      cropBoxResizable: false,\n      background: false,\n      movable: true,\n    });\n    this.cropper = cropper;\n')])])])]),e._v(" "),t("li",[t("p",[e._v("然后裁切对象通过getCroppedCanvas方法实现")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("getCroppedCanvas() {\n      return new Promise((resolve) => {\n        this.cropper.getCroppedCanvas().toBlob((blob) => {\n          resolve(blob);\n        });\n      });\n    },\n")])])])]),e._v(" "),t("li",[t("p",[e._v("最后接口需要一个 FormData")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(' const file = await this.getCroppedCanvas();\n      const fd = new FormData();\n      fd.append("photo", file);\n      //传递的是个form-data\n      await editUserPhoto(fd);\n      this.$emit("update-photo", window.URL.createObjectURL(file));\n      this.$toast.success("保存成功");\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("通过 socketio 来进行 websocket 连接")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("在 created 函数中")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('const socket = io("http://ttapi.research.itcast.cn");\n\n\n// 当客户端与服务器建立连接成功，触发 connect 事件\n\nsocket.on("connect", () => {\n  console.log("建立连接成功！");\n});\n\n\n/ 监听接收服务端消息\n\nsocket.on(\'message\', data => {\n\nconsole.log(\'收到服务器消息：\', data)\n\n})\n')])])])]),e._v(" "),t("li",[t("p",[e._v("发送消息的事件如下")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("onSendMessage () {\n\nconst message = this.message.trim()\n\nif (!message) {\n\nreturn\n\n}\n+\n\n// 发送消息\n\nthis.socket.emit('message', {\n\nmsg: message,\n\ntimestamp: Date.now()\n\n\t})\n}\n")])])])]),e._v(" "),t("li",[t("p",[e._v("最后把消息存储在数组中并清空文本框")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" this.messages.push({\n\nmessage,\n\n})\n// 清空文本框\n    this.message =\n")])])])]),e._v(" "),t("li",[t("p",[e._v("让消息始终滚动在最底部")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const messageList = this.$refs['message-list']\nmessageList.scrollTop = messageList.scrollHeight\n")])])])])])]),e._v(" "),t("li",[t("p",[e._v("token 过期")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("通过 axios 的响应拦截器进行 token 过期处理。通过响应拦截，对响应错误根据返回的不同的响应进行不同的响应提示。其中 token 过期是 401 响应码，先判断 vuex 中的 user 有没有，没有就跳转到登录页面进行登录，并封装一个方法，让跳转过去并携带当前页面的路由")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('/跳转到登录页\nfunction redirectLogin() {\n  router.push("/login?redirect=" + router.currentRoute.fullPath);\n}\n')])])])]),e._v(" "),t("li",[t("p",[e._v("其次再拿到 user 的 refresh_token 再一次进行请求，然后拿到新的 token 赋给 vuex 的 token，通过 vuex 的 setUser 方法把 user 重新赋回去，最后把错误对象进行新的请求")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('try {\n        const { data: res } = await refreshTokenReq({\n          url: "/app/v1_0/authorizations",\n          method: "PUT",\n          headers: {\n            Authorization: `Bearer ${user.refresh_token}`,\n          },\n        });\n\n​    //拿到新的token再给赋回去\n​    user.token = res.data.token;\n​    store.commit("setUser", user);\n​    //error.config是本次请求的相关配置对象\n​    //通过新的user对象进行之前失败的请求\n​    return request(error.config);\n  } catch (error) {\n​    redirectLogin();\n  }\n')])])])]),e._v(" "),t("li",[t("p",[e._v("登录成功后返回之前页面")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('const redirect = this.$route.query.redirect || "/";\nthis.$router.push(redirect);\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("组件缓存。通过 include 属性对想要缓存的组件进行缓存，但也会带来一定的问题，在 vuex 中定义 cachePage 状态，属性值是一个数组，然后映射在 app.vue 中绑定给 include 属性中。")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("在 layout 组件中去添加缓存")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('mounted() {\n  this.$store.commit("addCache", "layoutIndex");\n},\n')])])])]),e._v(" "),t("li",[t("p",[e._v("在 login 组件中登录成功后移除缓存")])]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//清除 Layout 缓存，让他重新渲染\nthis.$store.commit("removeCache", "layoutIndex");\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("处理页面的访问权限，通过给路由添加一个 meta 属性")]),e._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('meta: { requiresAuth: true }\ntrue代表需要拦截\n然后通过导航守卫进行路由拦截\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.requiresAuth) {\n    if (store.state.user) {\n      return next();\n    }\n    Dialog.confirm({\n      title: "访问提示",\n      message: "该功能需要登录才能访问，确认登录吗？",\n    })\n      .then(() => {\n        // on confirm\n        router.push("/login?redirect=" + router.currentRoute.fullPath);\n      })\n      .catch(() => {\n        // on cancel\n        next(false);\n      });\n  } else {\n    next();\n  }\n});\n')])])])])])]),e._v(" "),t("li",[t("p",[e._v("加壳技术")]),e._v(" "),t("ul",[t("li",[e._v("通过 Dcloud 的 HbuilderX 的 5+runtime 来进行加壳\n"),t("ul",[t("li",[e._v("将 vue 进行打包，真机调试的话保证是在同一个局域网。")]),e._v(" "),t("li",[e._v("通过设置 manifest.json 进行配置")]),e._v(" "),t("li",[e._v("最后通过 HbuilderX 导入 Public 文件然后运行在 android 即可。")])])]),e._v(" "),t("li",[e._v("通过 Dcloud 的 HbuilderX 的 5+runtime 来进行加壳\n"),t("ul",[t("li",[e._v("将 vue 进行打包，真机调试的话保证是在同一个局域网。")]),e._v(" "),t("li",[e._v("通过设置 manifest.json 进行配置")]),e._v(" "),t("li",[e._v("最后通过 HbuilderX 导入 Public 文件然后运行在 android 即可。")])])])])])])])])])}),[],!1,null,null,null);n.default=s.exports}}]);